<?php


namespace kodCmsPlugin\models\menu;


use ronashdkl\kodCms\components\FieldConfig;
use ronashdkl\kodCms\config\AppData;
use ronashdkl\kodCms\models\ListModel;
use kodCmsPlugin\models\post\PostModel;
use ronashdkl\kodCms\modules\admin\models\Post;
use ronashdkl\kodCms\modules\admin\models\Tree;
use yii\base\Model;
use yii\helpers\ArrayHelper;
use yii\helpers\Url;
use yii\web\JsExpression;

/**
 * Class AboutListModel
 * @property string $text
 * @package kodCmsPlugin\models\service
 */
class MenuListModel extends ListModel
{

    public $name;
    public $type;
    public $position;
    public $link;
    public $linkToCatalog;
    public $linkToPost;
    public $responsive_only;



    public function rules()
    {

        return ArrayHelper::merge(parent::rules(), [
            ['name', 'required'],
            ['type', 'required'],
            ['link', 'safe'],
            ['position', 'safe'],
            ['linkToCatalog', 'safe'],
            ['linkToPost', 'safe'],
            ['responsive_only', 'safe']
        ]);

    }
    public function getCheckList(){
        return ['link'=>'link','linkToPost'=>'Post','linkToCatalog'=>'Catalog'];
    }

    public function formTypes()
    {
        return [
            'name' => [
                // 'value' => $this->text,
                'type' => FieldConfig::INPUT,
            ],
            'type' => [
                // 'value' => $this->text,
                'type' => FieldConfig::RADIO,
                'data'=>$this->getCheckList()
            ],
            'position' => [
                // 'value' => $this->text,
                'type' => FieldConfig::INPUT,
                'config'=>['type'=>'number']
            ],
            'responsive_only'=>[
                'type'=>FieldConfig::RADIO,
                'data'=>[1=>'Yes',0=>'No']

            ],
            'link' => [
                // 'value' => $this->text,
                'type' => FieldConfig::INPUT,
            ],'linkToCatalog' => [
                // 'value' => $this->text,
                'type' => FieldConfig::SELECT,
                'config'=> [
                    'data'=> ArrayHelper::map(Tree::find()->roots()->andWhere(['active'=>1])->all(),'id','name'),
                    'options' => ['placeholder' => 'Select a catalogs ...'],
                    'pluginOptions' => [
                        'allowClear' => true]

                ]
            ],
            'linkToPost' => [
                // 'value' => $this->text,
                'type' => FieldConfig::SELECT,
                'config'=> [
                   'options' => ['multiple'=>false, 'placeholder' => 'Search Post'],

                    'pluginOptions' => [
                        'allowClear' => true,
                        'minimumInputLength' => 3,
                        'language' => [
                            'errorLoading' => new JsExpression("function () { return 'Waiting for results...'; }"),
                        ],
                        'ajax' => [
                            'url' => Url::toRoute(['/admin/api/search-post']),
                            'dataType' => 'json',
                            'data' => new JsExpression('function(params) { return {q:params.term}; }')
                        ],
                        'escapeMarkup' => new JsExpression('function (markup) { return markup; }'),
                        'templateResult' => new JsExpression('function(user) { return user.text; }'),
                        'templateSelection' => new JsExpression('function (user) {return user.text; }'),
                    ],

                ]
            ]
        ];
    }

    public function attributeHints()
    {
        return [
            'linkToPost'=>'current link to '.$this->linkToPost
        ];
    }

    public  function displayAttributes()
    {
        return  ['name','position'];
    }

    public function validate($attributeNames = null, $clearErrors = true)
    {
        return parent::validate($attributeNames, $clearErrors); // TODO: Change the autogenerated stub
    }



}
